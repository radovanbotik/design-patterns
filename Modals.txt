							Modals

1.we create a modal component and accept/destructure 1 parameter CHILDREN
2.we create modal background - position fixed and semi transparent
3.we create modal body that renders passed paramter CHILDREN
	a.inside we create a button to close modal
4.we create state true/false
5.we create button to toggle state change.

#A.on button click we change state to true and display modal
#B.on backgroundclick we change state to false and hide modal
	#B.1 we need to add e.stopPropagation on modal body because of event 
	     bubbling, clicks on background would buble through body of modal
	     and cause undesired closure of the modal.
#C.on button click inside modal we change state to false and hide modal


export const Modal = ({ children }) => {
  const [shouldShow, setShouldShow] = useState(false);

  return (
    <>
      <button onClick={() => setShouldShow(true)}>Show Modal</button>
      {shouldShow && (
        <ModalBackground onClick={() => setShouldShow(false)}>
          <ModalBody onClick={e => e.stopPropagation()}>
            {children}
            <button onClick={() => setShouldShow(false)}>Close Modal</button>
          </ModalBody>
        </ModalBackground>
      )}
    </>
  );
};
 

6.
in the app we can then render  Modal component and 
things encapsulated inside the component will become the children props.
<Modal>
  <RegularList
   items={products}
   resource={"product"}
   itemComponent={productSmallListItem}
  />
</Modal>